"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8356],{6795:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"contribute/development-guide/setup","title":"Setup","description":"Prerequisites","source":"@site/docs/contribute/development-guide/setup.md","sourceDirName":"contribute/development-guide","slug":"/contribute/development-guide/setup","permalink":"/tagreader-python/docs/contribute/development-guide/setup","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/tagreader-python/tree/main/documentation/docs/contribute/development-guide/setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"contribute","previous":{"title":"Publishing","permalink":"/tagreader-python/docs/contribute/development-guide/publishing"},"next":{"title":"Testing","permalink":"/tagreader-python/docs/contribute/development-guide/testing"}}');var s=i(4848),o=i(8453);i(6540);i(6916);const r={},l="Setup",a={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Pre-commit",id:"pre-commit",level:2},{value:"Installation",id:"installation",level:3},{value:"Usage",id:"usage",level:3},{value:"Install Poetry",id:"install-poetry",level:3},{value:"Install packages",id:"install-packages",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"setup",children:"Setup"})}),"\n","\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"To work with the tagreader code you'll need to install:"}),"\n",(0,s.jsx)(n.p,{children:"Python >=3.8 with the following packages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"pandas >= 1.0.0"}),"\n",(0,s.jsx)(n.li,{children:"requests"}),"\n",(0,s.jsx)(n.li,{children:"requests-kerberos"}),"\n",(0,s.jsx)(n.li,{children:"certifi >= 2023.5.7"}),"\n",(0,s.jsx)(n.li,{children:"diskcache"}),"\n",(0,s.jsx)(n.li,{children:"pyodbc (If using ODBC connection)"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"ODBC Connection",type:"info",children:(0,s.jsx)(n.p,{children:"If using ODBC connections, you must also install proprietary drivers for PI ODBC and/or Aspen IP.21 SQLPlus. These\ndrivers are only available for Microsoft Windows. Pyodbc will therefore not be installed for non-Windows systems."})}),"\n",(0,s.jsx)(n.h2,{id:"pre-commit",children:"Pre-commit"}),"\n",(0,s.jsx)(n.p,{children:"When contributing to this project, pre-commits are necessary, as they run certain tests, sanitisers, and formatters."}),"\n",(0,s.jsxs)(n.p,{children:["The project provides a ",(0,s.jsx)(n.code,{children:".pre-commit-config.yaml"})," file that is used to set up git ",(0,s.jsx)(n.em,{children:"pre-commit hooks"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"On commit locally, code is automatically formatted and checked for security vulnerabilities using pre-commit git hooks."}),"\n",(0,s.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.p,{children:"To initialize pre-commit in your local repository, run"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"pre-commit install\n"})}),"\n",(0,s.jsx)(n.p,{children:"This tells pre-commit to run for this repository on every commit."}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.p,{children:"Pre-commit will run on every commit, but can also be run manually on all files:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"pre-commit run --all-files\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Pre-commit tests can be skipped on commits with ",(0,s.jsx)(n.code,{children:"git commit --no-verify"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"If you have to skip the pre-commit tests, you're probably doing something you're not supposed to, and whoever commits after you might have to fix your \"mistakes\". Consider updating the pre-commit hooks if your code is non-compliant."})}),"\n",(0,s.jsx)(n.h3,{id:"install-poetry",children:"Install Poetry"}),"\n",(0,s.jsx)(n.p,{children:"Poetry is used to manage Python package dependencies."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ pip install poetry\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The installation instructions can be found ",(0,s.jsx)(n.a,{href:"https://python-poetry.org/docs/#installation",children:"here"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"install-packages",children:"Install packages"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ poetry install\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);